SYNOPSIS
       sssp ...

DESCRIPTION
       SSSP is an HTTP proxy for S3 that can generate short-lived, signed URLs
       for stored objects. By providing a server separate from S3 that can  be
       placed  behind an authenticating proxy or firewall, SSSP allows a vari-
       ety of common security mechanisms to be used  to  limit  access  to  S3
       objects over HTTP while taking advantage of S3's considerable bandwidth
       and parallelism.

       Use-cases for SSSP include:

          o sharing of large files within an organization,

          o media service for public facing web applications,

          o distribution of internal software.

OPTIONS
          -lolno No LOLs are permitted with this option.

REST INTERFACE
       URLs in SSSP point to one of two objects: an item or a  listing.  Items
       correspond  to  S3  objects;  a  GET retrieves a signed redirect to the
       object.  Listings are a sequence of URLs, in  ascending  order;  a  GET
       retrieves the listing as a plaintext document, one URL per line.

       GET http://sssp.io/p/a/t/h         # Signed for the default time (10s).

       A  PUT  to  an item sets the item's content. DELETEs can be singular or
       plural. A plural DELETE removes only the objects generated by  a  list-
       ing.

       URLs  are  divided syntactically in to listings and items. A URL ending
       with a slash is always a listing.

       GET http://sssp.io/raw    # Signed redirect to an object called raw.
       GET http://sssp.io/raw/   # Listing of items below the key `raw'.

       To make it easier to work with versioned or  timestamped  assets,  SSSP
       supports  a  @hi  and @lo meta-path. These correspond to the ASCIIbeti-
       cally highest and lowest (last and first) items, respectively.

       GET http://sssp.io/raw/2010-04/mbox
       GET http://sssp.io/raw/2010-05/mbox
       GET http://sssp.io/raw/2010-06/mbox
       GET http://sssp.io/raw/2010-07/mbox

       # Retrieval with /hi and /lo.
       GET http://sssp.io/raw/@hi/mbox  -307->  http://sssp.io/raw/2010-07/mbox
       GET http://sssp.io/raw/@lo/mbox  -307->  http://sssp.io/raw/2010-04/mbox

       The @hi and @lo wildcards, used together with a count, can make a list-
       ing:

       GET http://sssp.io/raw/@hi2/mbox  -200->  mbox
                                                 mbox

       GET http://sssp.io/raw/@lo2/mbox  -200->  mbox
                                                 mbox

       Counts are the natural numbers starting at 0.

       A  counted  wildcard,  like  @hi2, can be suffixed with a tilde to form
       it's complement -- so @hi2~ is everything but the  highest  two  items.
       This can be useful for bulk deletion of old/new things.

EXAMPLES
       # Start web application.
       sssp ...

BUGS
       Listing  results  should really be URLs. The time to sign should really
       be configurable; or at least settable with a query parameter.

